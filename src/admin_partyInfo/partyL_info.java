/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin_partyInfo;

import Config.Database;
import Model.candidates;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class partyL_info extends javax.swing.JFrame {

    Connection sqlConn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    int q, i, id;
    
    

    
    public partyL_info() {
        initComponents();
        this.candidatesInfo();
        this.disableInfo();
        this.btn_cred.setVisible(false);
    }
    
    private void clearForm() {
        this.txt_plist.setText("");
        this.txt_pres.setText("");
        this.txt_vPres.setText("");
        this.txt_sec.setText("");
        this.txt_tre.setText("");
        this.txt_aud.setText("");
        this.btn_submit.setEnabled(true);
        this.btn_clear.setEnabled(true);
    }
    
    private void disableInfo(){
        this.txt_plist.setVisible(false);
        this.txt_pres.setVisible(false);
        this.txt_vPres.setVisible(false);
        this.txt_sec.setVisible(false);
        this.txt_tre.setVisible(false);
        this.txt_aud.setVisible(false);
    }
    
    private void enableInfo(){
        this.txt_plist.setVisible(true);
        this.txt_pres.setVisible(true);
        this.txt_vPres.setVisible(true);
        this.txt_sec.setVisible(true);
        this.txt_tre.setVisible(true);
        this.txt_aud.setVisible(true);
    }
    
    public final void candidatesInfo(){
        // Database instance
        Database db = new Database();
        
        try {
            DefaultTableModel tblModel = (DefaultTableModel)candid_lists.getModel();
            tblModel.setRowCount(0);

            Statement st = db.DBConnect().createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM party_lists"); // Database Table name
            
            while (rs.next()){ //party_lists, president, vice president, secretary, treasurer, auditor

                String partyList = rs.getString("party_lists");
                String president = rs.getString("president");
                String vPres = rs.getString("vice president");
                String secretary = rs.getString("secretary");
                String treasurer = rs.getString("treasurer");
                String auditor = rs.getString("auditor");
                String data[] = {partyList, president, vPres, secretary, treasurer, auditor};
                
                tblModel.addRow(data);
            }
            
        }catch (Exception e){
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        txt_desc = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        candid_lists = new javax.swing.JTable();
        btn_new = new javax.swing.JButton();
        btn_submit = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        party_l = new javax.swing.JLabel();
        pres = new javax.swing.JLabel();
        v_pres = new javax.swing.JLabel();
        sec = new javax.swing.JLabel();
        aud = new javax.swing.JLabel();
        name = new javax.swing.JScrollPane();
        txt_plist = new javax.swing.JEditorPane();
        post = new javax.swing.JScrollPane();
        txt_aud = new javax.swing.JEditorPane();
        btn_cred = new javax.swing.JButton();
        post1 = new javax.swing.JScrollPane();
        txt_pres = new javax.swing.JEditorPane();
        post2 = new javax.swing.JScrollPane();
        txt_vPres = new javax.swing.JEditorPane();
        post3 = new javax.swing.JScrollPane();
        txt_sec = new javax.swing.JEditorPane();
        post4 = new javax.swing.JScrollPane();
        txt_tre = new javax.swing.JEditorPane();
        tre = new javax.swing.JLabel();
        back_button = new javax.swing.JButton();

        txt_desc.setColumns(20);
        txt_desc.setRows(5);
        jScrollPane2.setViewportView(txt_desc);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 51, 112));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Info");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, -1, -1));

        candid_lists.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 112)));
        candid_lists.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Party List Name", "President", "Vice President", "Secretary", "Treasurer", "Auditor"
            }
        ));
        candid_lists.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                candid_listsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(candid_lists);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 500, 690, 150));

        btn_new.setText("New");
        btn_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_newActionPerformed(evt);
            }
        });
        jPanel1.add(btn_new, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, -1, -1));

        btn_submit.setText("Submit");
        btn_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_submitActionPerformed(evt);
            }
        });
        jPanel1.add(btn_submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, -1, -1));

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });
        jPanel1.add(btn_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 160, -1, -1));

        btn_clear.setText("Delete");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });
        jPanel1.add(btn_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 200, -1, -1));

        party_l.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        party_l.setForeground(new java.awt.Color(255, 255, 255));
        party_l.setText(" Party List ");
        jPanel1.add(party_l, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 110, -1));

        pres.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pres.setForeground(new java.awt.Color(255, 255, 255));
        pres.setText(" President ");
        jPanel1.add(pres, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 110, -1));

        v_pres.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        v_pres.setForeground(new java.awt.Color(255, 255, 255));
        v_pres.setText(" Vice President");
        jPanel1.add(v_pres, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 110, -1));

        sec.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sec.setForeground(new java.awt.Color(255, 255, 255));
        sec.setText(" Secretary");
        jPanel1.add(sec, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 110, -1));

        aud.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        aud.setForeground(new java.awt.Color(255, 255, 255));
        aud.setText(" Auditor");
        jPanel1.add(aud, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));

        name.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        name.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        name.setViewportView(txt_plist);

        jPanel1.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 180, -1));

        post.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        post.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        post.setViewportView(txt_aud);

        jPanel1.add(post, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 180, -1));

        btn_cred.setText("Credentials");
        btn_cred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_credActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cred, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 240, -1, -1));

        post1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        post1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        post1.setViewportView(txt_pres);

        jPanel1.add(post1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 180, -1));

        post2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        post2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        post2.setViewportView(txt_vPres);

        jPanel1.add(post2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 180, -1));

        post3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        post3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        post3.setViewportView(txt_sec);

        jPanel1.add(post3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 180, -1));

        post4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        post4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        post4.setViewportView(txt_tre);

        jPanel1.add(post4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 180, -1));

        tre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tre.setForeground(new java.awt.Color(255, 255, 255));
        tre.setText(" Treasurer");
        jPanel1.add(tre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        back_button.setText("back");
        back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(back_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 660));

        setSize(new java.awt.Dimension(709, 694));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void updatePartyListTable() {
        DefaultTableModel recordTable = (DefaultTableModel) candid_lists.getModel();
        recordTable.setRowCount(0);

        try {
            Database db = new Database();
            sqlConn = db.DBConnect();
            pst = sqlConn.prepareStatement("SELECT * FROM party_lists");

            rs = pst.executeQuery();

            while (rs.next()) {
                Vector row = new Vector();
                // Add columns in the specific order: party_lists, president, vice president, secretary, treasurer, auditor
                row.add(rs.getString("party_lists"));
                row.add(rs.getString("president"));
                row.add(rs.getString("vice president"));
                row.add(rs.getString("secretary"));
                row.add(rs.getString("treasurer"));
                row.add(rs.getString("auditor"));

                recordTable.addRow(row);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error updating party list table: " + ex.getMessage());
        }
    }


    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            Database db = new Database();
            sqlConn = db.DBConnect();
            pst = sqlConn.prepareStatement("UPDATE party_lists SET president = ?, `vice president` = ?, secretary = ?, treasurer = ?, auditor = ? WHERE party_lists = ?");

            pst.setString(1, txt_pres.getText());
            pst.setString(2, txt_vPres.getText());
            pst.setString(3, txt_sec.getText());
            pst.setString(4, txt_tre.getText());
            pst.setString(5, txt_aud.getText());
            pst.setString(6, txt_plist.getText());

            int rowsAffected = pst.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Record Updated Successfully");
                clearForm();
                updatePartyListTable();
            } else {
                JOptionPane.showMessageDialog(this, "No record found with the given party list name");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error updating record: " + ex.getMessage());
        }
    }               
                               

    private void btn_submitActionPerformed(java.awt.event.ActionEvent evt) {
        // Check if any of the required fields are empty
        if (txt_plist.getText().isEmpty() || txt_pres.getText().isEmpty() || txt_vPres.getText().isEmpty() || 
            txt_sec.getText().isEmpty() || txt_tre.getText().isEmpty() || txt_aud.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields");
            return; // Exit the method if any field is empty
        }
        
        try {
            Database db = new Database();
            sqlConn = db.DBConnect();
            pst = sqlConn.prepareStatement("INSERT INTO party_lists (party_lists, president, `vice president`, secretary, treasurer, auditor) VALUES (?, ?, ?, ?, ?, ?)");

            pst.setString(1, txt_plist.getText());
            pst.setString(2, txt_pres.getText());
            pst.setString(3, txt_vPres.getText());
            pst.setString(4, txt_sec.getText());
            pst.setString(5, txt_tre.getText());
            pst.setString(6, txt_aud.getText());

            int rowsAffected = pst.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Record Inserted Successfully");
                clearForm();
                updatePartyListTable(); // Update the table after insertion
            } else {
                JOptionPane.showMessageDialog(this, "Error inserting record");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error inserting record: " + ex.getMessage());
        }
    }


    private void candid_listsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_candid_listsMouseClicked
        if (evt.getClickCount() == 1) {  
             DefaultTableModel tblModel = (DefaultTableModel)candid_lists.getModel();
             int row = candid_lists.getSelectedRow();
             
             String p_list = tblModel.getValueAt(row, 0).toString();
             String president = tblModel.getValueAt(row, 1).toString();
             String vPres = tblModel.getValueAt(row, 2).toString();
             String secretary = tblModel.getValueAt(row, 3).toString();
             String treasurer = tblModel.getValueAt(row, 4).toString();
             String auditor = tblModel.getValueAt(row, 5).toString();
             
             this.txt_plist.setText(p_list);
             this.txt_pres.setText(president);
             this.txt_vPres.setText(vPres);
             this.txt_sec.setText(secretary);
             this.txt_tre.setText(treasurer);
             this.txt_aud.setText(auditor);
             this.btn_cred.setVisible(true);
             this.enableInfo();
        }
    }//GEN-LAST:event_candid_listsMouseClicked

    private void btn_credActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_credActionPerformed
        this.setVisible(false);
        new partyL_cred().setVisible(true);
    }//GEN-LAST:event_btn_credActionPerformed

    private void btn_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_newActionPerformed
       this.enableInfo();
       this.clearForm();
    }//GEN-LAST:event_btn_newActionPerformed

    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_buttonActionPerformed
        this.setVisible(false);
        new admin_dash.Admin_dashboard().setVisible(true);
    }//GEN-LAST:event_back_buttonActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        int selectedRow = candid_lists.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a row to delete.");
        return;
    }
    
    String partyListName = candid_lists.getValueAt(selectedRow, 0).toString();
    
    int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the selected record?", "Confirmation", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        try {
            Database db = new Database();
            sqlConn = db.DBConnect();
            pst = sqlConn.prepareStatement("DELETE FROM party_lists WHERE party_lists = ?");

            pst.setString(1, partyListName);

            int rowsAffected = pst.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Record Deleted Successfully");
                clearForm();
                updatePartyListTable(); // Update the table after deletion
            } else {
                JOptionPane.showMessageDialog(this, "No record found with the given party list name");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error deleting record: " + ex.getMessage());
        }
    }
    }//GEN-LAST:event_btn_clearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(partyL_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(partyL_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(partyL_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(partyL_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new partyL_info().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aud;
    private javax.swing.JButton back_button;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_cred;
    private javax.swing.JButton btn_new;
    private javax.swing.JButton btn_submit;
    private javax.swing.JButton btn_update;
    private javax.swing.JTable candid_lists;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane name;
    private javax.swing.JLabel party_l;
    private javax.swing.JScrollPane post;
    private javax.swing.JScrollPane post1;
    private javax.swing.JScrollPane post2;
    private javax.swing.JScrollPane post3;
    private javax.swing.JScrollPane post4;
    private javax.swing.JLabel pres;
    private javax.swing.JLabel sec;
    private javax.swing.JLabel tre;
    private javax.swing.JEditorPane txt_aud;
    private javax.swing.JTextArea txt_desc;
    private javax.swing.JEditorPane txt_plist;
    private javax.swing.JEditorPane txt_pres;
    private javax.swing.JEditorPane txt_sec;
    private javax.swing.JEditorPane txt_tre;
    private javax.swing.JEditorPane txt_vPres;
    private javax.swing.JLabel v_pres;
    // End of variables declaration//GEN-END:variables
}
